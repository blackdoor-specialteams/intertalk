/**
 * This class is generated by jOOQ
 */
package black.door.intertalk.jooq.tables.records;


import black.door.intertalk.jooq.tables.Messages;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessagesRecord extends UpdatableRecordImpl<MessagesRecord> implements Record8<Long, String[], String, Timestamp, Timestamp, String, String, String> {

    private static final long serialVersionUID = -1287321533;

    /**
     * Setter for <code>public.messages.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.messages.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.messages.to</code>.
     */
    public void setTo(String[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.messages.to</code>.
     */
    @NotNull
    public String[] getTo() {
        return (String[]) get(1);
    }

    /**
     * Setter for <code>public.messages.from</code>.
     */
    public void setFrom(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.messages.from</code>.
     */
    @NotNull
    public String getFrom() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.messages.sent_at</code>.
     */
    public void setSentAt(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.messages.sent_at</code>.
     */
    @NotNull
    public Timestamp getSentAt() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>public.messages.received_at</code>.
     */
    public void setReceivedAt(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.messages.received_at</code>.
     */
    @NotNull
    public Timestamp getReceivedAt() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>public.messages.message</code>.
     */
    public void setMessage(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.messages.message</code>.
     */
    @NotNull
    public String getMessage() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.messages.message_formatted</code>.
     */
    public void setMessageFormatted(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.messages.message_formatted</code>.
     */
    public String getMessageFormatted() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.messages.format</code>.
     */
    public void setFormat(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.messages.format</code>.
     */
    public String getFormat() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String[], String, Timestamp, Timestamp, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String[], String, Timestamp, Timestamp, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Messages.MESSAGES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String[]> field2() {
        return Messages.MESSAGES.TO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Messages.MESSAGES.FROM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Messages.MESSAGES.SENT_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Messages.MESSAGES.RECEIVED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Messages.MESSAGES.MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Messages.MESSAGES.MESSAGE_FORMATTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Messages.MESSAGES.FORMAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String[] value2() {
        return getTo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getFrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getSentAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getReceivedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getMessageFormatted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getFormat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessagesRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessagesRecord value2(String[] value) {
        setTo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessagesRecord value3(String value) {
        setFrom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessagesRecord value4(Timestamp value) {
        setSentAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessagesRecord value5(Timestamp value) {
        setReceivedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessagesRecord value6(String value) {
        setMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessagesRecord value7(String value) {
        setMessageFormatted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessagesRecord value8(String value) {
        setFormat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessagesRecord values(Long value1, String[] value2, String value3, Timestamp value4, Timestamp value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessagesRecord
     */
    public MessagesRecord() {
        super(Messages.MESSAGES);
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(Long id, String[] to, String from, Timestamp sentAt, Timestamp receivedAt, String message, String messageFormatted, String format) {
        super(Messages.MESSAGES);

        set(0, id);
        set(1, to);
        set(2, from);
        set(3, sentAt);
        set(4, receivedAt);
        set(5, message);
        set(6, messageFormatted);
        set(7, format);
    }
}
